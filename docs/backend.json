{
  "entities": {
    "Task": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Task",
      "type": "object",
      "description": "Represents a task or to-do item within a project.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Task entity."
        },
        "projectId": {
          "type": "string",
          "description": "Reference to Project. (Relationship: Project 1:N Task)"
        },
        "Tarefa": {
          "type": "string",
          "description": "The name or title of the task."
        },
        "Responsável": {
          "type": "string",
          "description": "The person responsible for completing the task."
        },
        "Status": {
          "type": "string",
          "description": "The current status of the task (e.g., 'pending', 'in progress', 'completed')."
        },
        "Prazo": {
          "type": "string",
          "description": "The deadline or due date for the task."
        },
        "Última Atualização": {
          "type": "string",
          "description": "The date and time when the task was last updated."
        },
        "Observações": {
          "type": "string",
          "description": "Any additional notes or observations about the task."
        }
      },
      "required": [
        "id",
        "projectId",
        "Tarefa",
        "Responsável",
        "Status",
        "Prazo",
        "Última Atualização"
      ]
    },
    "Project": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Project",
      "type": "object",
      "description": "Represents a project that contains multiple tasks.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Project entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the project."
        },
        "description": {
          "type": "string",
          "description": "A brief description of the project."
        }
      },
      "required": [
        "id",
        "name"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}/tasks/{taskId}",
        "definition": {
          "entityName": "Task",
          "schema": {
            "$ref": "#/backend/entities/Task"
          },
          "description": "Stores task data for a specific user. The path enforces user-specific ownership for data access and simplifies security rules.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, obtained from Firebase Auth."
            },
            {
              "name": "taskId",
              "description": "The unique identifier for the task, generated by Firestore or the application."
            }
          ]
        }
      }
    ]
  }
}